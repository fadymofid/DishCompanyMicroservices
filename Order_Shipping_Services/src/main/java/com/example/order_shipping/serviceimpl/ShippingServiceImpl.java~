package com.example.order_shipping.serviceimpl;

import com.example.order_shipping.Models.ShippingCompany;
import com.example.order_shipping.service.ShippingService;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.example.order_shipping.*;

import java.math.BigDecimal;
@Service
public class ShippingServiceImpl implements ShippingService {
    private final ShippingCompanyRepository shippingCompanyRepository;

    @Autowired
    public ShippingServiceImpl(ShippingCompanyRepository shippingCompanyRepository) {
        this.shippingCompanyRepository = shippingCompanyRepository;
    }

    public boolean validateShippingRegion(Long companyId, String region) {
        ShippingCompany company = shippingCompanyRepository.findById(companyId)
                .orElseThrow(() -> new ResourceNotFoundException("Shipping company not found"));
        return company.getCoverageRegions().contains(region);
    }

    public void createShippingCompany(ShippingCompanyRequest request) {
        ShippingCompany company = new ShippingCompany();
        company.setName(request.getName());
        company.setCoverageRegions(request.getCoverageRegions());
        shippingCompanyRepository.save(company);
    }
}